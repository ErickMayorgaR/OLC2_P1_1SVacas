
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftORleftANDrightUNOTleftIGUALIGUALDIFERENTEMENORMENORIGUALMAYORMAYORIGUALleftMASMENOSleftPORDIVPORCENTAJEleftPARIPARDnonassocPOTENCIArightUMINUSAND ANY BOOLEAN BREAK CADENA COMA CONTINUE DECIMAL DIFERENTE DIV DPUNTOS FOR FUNCTION ID IGUAL IGUALIGUAL LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS NOT NULL NUMBER NUMBER OF OR PARD PARI POR PORCENTAJE POTENCIA PTCOMA PUNTO RCONSOLE RELSE RELSEIF RETURN RFALSE RIF RLET RLOG RTRUE STRING WHILEinit : instruccionesinstrucciones    : instrucciones instruccioninstrucciones : instruccioninstruccion : imprimir PTCOMA\n                   | declaracion_normal PTCOMA\n                   | asignacion_instr PTCOMA\n                   | if_instr\n                   | for_instr \n                   | while_instr \n                   | return_instr PTCOMA\n                   | continue_instr PTCOMA\n                   | break_instr PTCOMA\n                   | llamada_funcion_instr PTCOMA\n                   | funciones_instr\n                   | llamada_funcion_struct_instr PTCOMA \n                    imprimir : RCONSOLE PUNTO RLOG PARI expresiones_coma PARDdeclaracion_normal : RLET ID DPUNTOS tipo IGUAL expresiondeclaracion_normal : RLET ID IGUAL expresiondeclaracion_normal : RLET IDdeclaracion_normal : RLET ID DPUNTOS tipoasignacion_instr : ID IGUAL expresion DPUNTOS DPUNTOS tipoasignacion_instr : ID IGUAL expresionwhile_instr : WHILE PARI expresion PARD LLAVEIZQ instrucciones LLAVEDERfor_instr : FOR PARI RLET ID OF expresion PARD LLAVEIZQ instrucciones LLAVEDERfor_instr : FOR PARI RLET ID IGUAL expresion PTCOMA expresion PTCOMA ID MAS MAS PARD LLAVEIZQ instrucciones LLAVEDERreturn_instr : RETURN expresionreturn_instr : RETURNbreak_instr : BREAKcontinue_instr : CONTINUEfunciones_instr : FUNCTION ID PARI PARD LLAVEIZQ instrucciones LLAVEDERfunciones_instr : FUNCTION ID PARI parametros PARD LLAVEIZQ instrucciones LLAVEDERparametros : parametros COMA parametroparametros : parametroparametro : ID DPUNTOS tipollamada_funcion_instr : ID PARI PARDllamada_funcion_struct_instr : ID PARI parametros_llamada PARDparametros_llamada : parametros_llamada COMA expresion parametros_llamada : expresionif_instr : RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDERif_instr : RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER elseifs_instr RELSE LLAVEIZQ instrucciones LLAVEDERif_instr : RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER elseifs_instrif_instr : RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDERelseifs_instr : elseifs_instr elseif_instrelseifs_instr : elseif_instrelseif_instr : RELSEIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDERtipo : STRING\n            | NUMBER\n            | BOOLEANexpresion : PARI expresion PARDexpresion : CADENAexpresion : NUMBERexpresion : MENOS NUMBER %prec UMINUSexpresion : NULLexpresion : IDexpresion : RTRUE\n               | RFALSEexpresion : expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion POR expresion\n                 | expresion DIV expresion\n                 | expresion POTENCIA expresion\n                 | expresion PORCENTAJE expresionexpresion : expresion IGUALIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion MAYORIGUAL expresionexpresion : expresion AND expresion\n                 | expresion OR expresionexpresion : NOT expresion %prec UNOTexpresiones_coma : expresiones_coma COMA expresionexpresiones_coma : expresion'
    
_lr_action_items = {'RCONSOLE':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[16,16,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,16,16,16,16,16,16,16,-39,-23,-30,16,-41,-44,16,-31,-43,16,16,16,16,-24,16,-42,-40,16,16,-45,16,16,-25,]),'RLET':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,40,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[17,17,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,61,17,17,17,17,17,17,17,-39,-23,-30,17,-41,-44,17,-31,-43,17,17,17,17,-24,17,-42,-40,17,17,-45,17,17,-25,]),'ID':([0,2,3,7,8,9,14,17,22,25,26,27,28,29,30,31,32,33,34,37,38,39,41,43,51,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,114,117,118,119,120,122,124,126,129,132,134,135,138,140,141,142,143,144,146,148,150,152,153,154,155,156,157,158,160,162,163,166,167,169,171,172,173,174,],[18,18,-3,-7,-8,-9,-14,36,48,52,-2,-4,-5,-6,-10,-11,-12,-13,-15,48,48,48,48,48,48,48,91,48,48,48,48,48,48,48,48,48,48,48,48,48,48,108,48,48,48,18,48,48,18,18,108,48,18,18,18,18,-39,48,-23,-30,18,-41,-44,18,-31,-43,18,48,18,161,18,18,-24,18,-42,-40,18,18,-45,18,18,-25,]),'RIF':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[19,19,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,19,19,19,19,19,19,19,-39,-23,-30,19,-41,-44,19,-31,-43,19,19,19,19,-24,19,-42,-40,19,19,-45,19,19,-25,]),'FOR':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[20,20,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,20,20,20,20,20,20,20,-39,-23,-30,20,-41,-44,20,-31,-43,20,20,20,20,-24,20,-42,-40,20,20,-45,20,20,-25,]),'WHILE':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[21,21,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,21,21,21,21,21,21,21,-39,-23,-30,21,-41,-44,21,-31,-43,21,21,21,21,-24,21,-42,-40,21,21,-45,21,21,-25,]),'RETURN':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[22,22,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,22,22,22,22,22,22,22,-39,-23,-30,22,-41,-44,22,-31,-43,22,22,22,22,-24,22,-42,-40,22,22,-45,22,22,-25,]),'CONTINUE':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[23,23,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,23,23,23,23,23,23,23,-39,-23,-30,23,-41,-44,23,-31,-43,23,23,23,23,-24,23,-42,-40,23,23,-45,23,23,-25,]),'BREAK':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[24,24,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,24,24,24,24,24,24,24,-39,-23,-30,24,-41,-44,24,-31,-43,24,24,24,24,-24,24,-42,-40,24,24,-45,24,24,-25,]),'FUNCTION':([0,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,117,120,122,129,132,134,135,138,141,142,143,144,146,148,150,152,153,155,157,158,160,162,163,166,167,169,171,172,173,174,],[25,25,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,25,25,25,25,25,25,25,-39,-23,-30,25,-41,-44,25,-31,-43,25,25,25,25,-24,25,-42,-40,25,25,-45,25,25,-25,]),'$end':([1,2,3,7,8,9,14,26,27,28,29,30,31,32,33,34,138,141,142,144,146,150,152,160,163,166,171,174,],[0,-1,-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,-39,-23,-30,-41,-44,-31,-43,-24,-42,-40,-45,-25,]),'LLAVEDER':([3,7,8,9,14,26,27,28,29,30,31,32,33,34,129,132,134,138,141,142,143,144,146,150,152,155,158,160,162,163,166,169,171,173,174,],[-3,-7,-8,-9,-14,-2,-4,-5,-6,-10,-11,-12,-13,-15,138,141,142,-39,-23,-30,150,-41,-44,-31,-43,160,163,-24,166,-42,-40,171,-45,174,-25,]),'PTCOMA':([4,5,6,10,11,12,13,15,22,23,24,36,42,44,45,47,48,49,50,56,57,78,79,82,83,84,85,86,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,125,127,128,131,149,],[27,28,29,30,31,32,33,34,-27,-29,-28,-19,-26,-50,-51,-53,-54,-55,-56,-22,-35,-52,-71,-20,-46,-47,-48,-18,-36,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-49,-16,-17,-21,140,156,]),'PUNTO':([16,],[35,]),'IGUAL':([18,36,82,83,84,85,91,],[37,55,114,-46,-47,-48,119,]),'PARI':([18,19,20,21,22,37,38,39,41,43,51,52,53,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,147,154,],[38,39,40,41,43,43,43,43,43,43,43,80,81,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,154,43,]),'CADENA':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NUMBER':([22,37,38,39,41,43,46,51,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,115,118,119,121,126,140,154,],[45,45,45,45,45,45,78,45,84,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,84,45,45,84,45,45,45,]),'MENOS':([22,37,38,39,41,42,43,44,45,47,48,49,50,51,55,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,86,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,116,118,119,126,127,130,131,137,140,149,154,159,],[46,46,46,46,46,64,46,-50,-51,-53,-54,-55,-56,46,46,64,64,64,64,46,46,46,46,46,46,46,46,46,46,46,46,46,46,64,-52,64,46,64,46,-57,-58,-59,-60,-61,-62,64,64,64,64,64,64,64,64,-49,64,46,64,46,46,46,64,64,64,64,46,64,46,64,]),'NULL':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'RTRUE':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'RFALSE':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'NOT':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'RLOG':([35,],[53,]),'DPUNTOS':([36,44,45,47,48,49,50,56,78,79,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,],[54,-50,-51,-53,-54,-55,-56,87,-52,-71,115,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-49,121,]),'PARD':([38,44,45,47,48,49,50,58,59,60,62,77,78,79,80,83,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,116,130,133,136,137,159,168,],[57,-50,-51,-53,-54,-55,-56,88,-38,90,92,107,-52,-71,109,-46,-47,-48,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-49,123,-33,125,-73,-37,139,-34,-32,-72,164,170,]),'MAS':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,161,165,],[63,-50,-51,-53,-54,-55,-56,63,63,63,63,63,-52,63,63,-57,-58,-59,-60,-61,-62,63,63,63,63,63,63,63,63,-49,63,63,63,63,63,63,63,63,165,168,]),'POR':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[65,-50,-51,-53,-54,-55,-56,65,65,65,65,65,-52,65,65,65,65,-59,-60,-61,-62,65,65,65,65,65,65,65,65,-49,65,65,65,65,65,65,65,65,]),'DIV':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[66,-50,-51,-53,-54,-55,-56,66,66,66,66,66,-52,66,66,66,66,-59,-60,-61,-62,66,66,66,66,66,66,66,66,-49,66,66,66,66,66,66,66,66,]),'POTENCIA':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[67,-50,-51,-53,-54,-55,-56,67,67,67,67,67,-52,67,67,67,67,67,67,None,67,67,67,67,67,67,67,67,67,-49,67,67,67,67,67,67,67,67,]),'PORCENTAJE':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[68,-50,-51,-53,-54,-55,-56,68,68,68,68,68,-52,68,68,68,68,-59,-60,-61,-62,68,68,68,68,68,68,68,68,-49,68,68,68,68,68,68,68,68,]),'IGUALIGUAL':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[69,-50,-51,-53,-54,-55,-56,69,69,69,69,69,-52,69,69,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,69,69,-49,69,69,69,69,69,69,69,69,]),'DIFERENTE':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[70,-50,-51,-53,-54,-55,-56,70,70,70,70,70,-52,70,70,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,70,70,-49,70,70,70,70,70,70,70,70,]),'MENOR':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[71,-50,-51,-53,-54,-55,-56,71,71,71,71,71,-52,71,71,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,71,71,-49,71,71,71,71,71,71,71,71,]),'MAYOR':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[72,-50,-51,-53,-54,-55,-56,72,72,72,72,72,-52,72,72,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,72,72,-49,72,72,72,72,72,72,72,72,]),'MENORIGUAL':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[73,-50,-51,-53,-54,-55,-56,73,73,73,73,73,-52,73,73,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,73,73,-49,73,73,73,73,73,73,73,73,]),'MAYORIGUAL':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[74,-50,-51,-53,-54,-55,-56,74,74,74,74,74,-52,74,74,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,74,74,-49,74,74,74,74,74,74,74,74,]),'AND':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[75,-50,-51,-53,-54,-55,-56,75,75,75,75,75,-52,-71,75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,75,-49,75,75,75,75,75,75,75,75,]),'OR':([42,44,45,47,48,49,50,56,59,60,62,77,78,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,127,130,131,137,149,159,],[76,-50,-51,-53,-54,-55,-56,76,76,76,76,76,-52,-71,76,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-49,76,76,76,76,76,76,76,76,]),'COMA':([44,45,47,48,49,50,58,59,78,79,83,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,116,133,136,137,],[-50,-51,-53,-54,-55,-56,89,-38,-52,-71,-46,-47,-48,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-49,124,-33,126,-73,-37,-34,-32,-72,]),'STRING':([54,115,121,],[83,83,83,]),'BOOLEAN':([54,115,121,],[85,85,85,]),'LLAVEIZQ':([90,92,109,123,139,145,151,164,170,],[117,120,122,135,148,153,157,167,172,]),'OF':([91,],[118,]),'RELSE':([138,144,146,152,171,],[145,151,-44,-43,-45,]),'RELSEIF':([138,144,146,152,171,],[147,147,-44,-43,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,117,120,122,135,148,153,157,167,172,],[2,129,132,134,143,155,158,162,169,173,]),'instruccion':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[3,26,3,3,3,26,26,26,3,26,3,3,26,3,26,26,3,26,3,26,]),'imprimir':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_normal':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'return_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'continue_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'break_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'llamada_funcion_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'funciones_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'llamada_funcion_struct_instr':([0,2,117,120,122,129,132,134,135,143,148,153,155,157,158,162,167,169,172,173,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expresion':([22,37,38,39,41,43,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,89,114,118,119,126,140,154,],[42,56,59,60,62,77,79,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,127,130,131,137,149,159,]),'parametros_llamada':([38,],[58,]),'tipo':([54,115,121,],[82,128,133,]),'parametros':([80,],[110,]),'parametro':([80,124,],[111,136,]),'expresiones_coma':([81,],[112,]),'elseifs_instr':([138,],[144,]),'elseif_instr':([138,144,],[146,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_inicio','Analizador_Sintactico.py',72),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','Analizador_Sintactico.py',77),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_2','Analizador_Sintactico.py',83),
  ('instruccion -> imprimir PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',91),
  ('instruccion -> declaracion_normal PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',92),
  ('instruccion -> asignacion_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',93),
  ('instruccion -> if_instr','instruccion',1,'p_instrucciones_evaluar','Analizador_Sintactico.py',94),
  ('instruccion -> for_instr','instruccion',1,'p_instrucciones_evaluar','Analizador_Sintactico.py',95),
  ('instruccion -> while_instr','instruccion',1,'p_instrucciones_evaluar','Analizador_Sintactico.py',96),
  ('instruccion -> return_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',97),
  ('instruccion -> continue_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',98),
  ('instruccion -> break_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',99),
  ('instruccion -> llamada_funcion_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',100),
  ('instruccion -> funciones_instr','instruccion',1,'p_instrucciones_evaluar','Analizador_Sintactico.py',101),
  ('instruccion -> llamada_funcion_struct_instr PTCOMA','instruccion',2,'p_instrucciones_evaluar','Analizador_Sintactico.py',102),
  ('imprimir -> RCONSOLE PUNTO RLOG PARI expresiones_coma PARD','imprimir',6,'p_imprimir','Analizador_Sintactico.py',114),
  ('declaracion_normal -> RLET ID DPUNTOS tipo IGUAL expresion','declaracion_normal',6,'p_declaracion_normal','Analizador_Sintactico.py',121),
  ('declaracion_normal -> RLET ID IGUAL expresion','declaracion_normal',4,'p_declaracion_sin_tipo','Analizador_Sintactico.py',125),
  ('declaracion_normal -> RLET ID','declaracion_normal',2,'p_declaracion_sin_tipo_sin_valor','Analizador_Sintactico.py',129),
  ('declaracion_normal -> RLET ID DPUNTOS tipo','declaracion_normal',4,'p_declaracion_sin_valor','Analizador_Sintactico.py',133),
  ('asignacion_instr -> ID IGUAL expresion DPUNTOS DPUNTOS tipo','asignacion_instr',6,'p_asignacion_var_tipo','Analizador_Sintactico.py',145),
  ('asignacion_instr -> ID IGUAL expresion','asignacion_instr',3,'p_asignacion_var','Analizador_Sintactico.py',149),
  ('while_instr -> WHILE PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER','while_instr',7,'p_While','Analizador_Sintactico.py',160),
  ('for_instr -> FOR PARI RLET ID OF expresion PARD LLAVEIZQ instrucciones LLAVEDER','for_instr',10,'p_for_string','Analizador_Sintactico.py',165),
  ('for_instr -> FOR PARI RLET ID IGUAL expresion PTCOMA expresion PTCOMA ID MAS MAS PARD LLAVEIZQ instrucciones LLAVEDER','for_instr',16,'p_for_rango','Analizador_Sintactico.py',169),
  ('return_instr -> RETURN expresion','return_instr',2,'p_sentencia_transferencia_return_expresion','Analizador_Sintactico.py',176),
  ('return_instr -> RETURN','return_instr',1,'p_sentencia_transferencia_return','Analizador_Sintactico.py',180),
  ('break_instr -> BREAK','break_instr',1,'p_sentencia_transferencia_break','Analizador_Sintactico.py',184),
  ('continue_instr -> CONTINUE','continue_instr',1,'p_sentencia_transferencia_continue','Analizador_Sintactico.py',188),
  ('funciones_instr -> FUNCTION ID PARI PARD LLAVEIZQ instrucciones LLAVEDER','funciones_instr',7,'p_funciones','Analizador_Sintactico.py',195),
  ('funciones_instr -> FUNCTION ID PARI parametros PARD LLAVEIZQ instrucciones LLAVEDER','funciones_instr',8,'p_funciones_parametros','Analizador_Sintactico.py',199),
  ('parametros -> parametros COMA parametro','parametros',3,'p_parametros_funcion','Analizador_Sintactico.py',206),
  ('parametros -> parametro','parametros',1,'p_parametros_parametro','Analizador_Sintactico.py',211),
  ('parametro -> ID DPUNTOS tipo','parametro',3,'p_parametro_tipo','Analizador_Sintactico.py',216),
  ('llamada_funcion_instr -> ID PARI PARD','llamada_funcion_instr',3,'p_llamada_funcion','Analizador_Sintactico.py',222),
  ('llamada_funcion_struct_instr -> ID PARI parametros_llamada PARD','llamada_funcion_struct_instr',4,'p_llamada_funcion_parametros','Analizador_Sintactico.py',227),
  ('parametros_llamada -> parametros_llamada COMA expresion','parametros_llamada',3,'p_parametros_llamada_funcion','Analizador_Sintactico.py',232),
  ('parametros_llamada -> expresion','parametros_llamada',1,'p_parametros_llamada_expresion','Analizador_Sintactico.py',237),
  ('if_instr -> RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER','if_instr',7,'p_if','Analizador_Sintactico.py',244),
  ('if_instr -> RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER elseifs_instr RELSE LLAVEIZQ instrucciones LLAVEDER','if_instr',12,'p_if_elseif_else','Analizador_Sintactico.py',248),
  ('if_instr -> RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER elseifs_instr','if_instr',8,'p_if_elseif','Analizador_Sintactico.py',252),
  ('if_instr -> RIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER','if_instr',11,'p_if_else','Analizador_Sintactico.py',256),
  ('elseifs_instr -> elseifs_instr elseif_instr','elseifs_instr',2,'p_elseifs_elseifs_elseif','Analizador_Sintactico.py',260),
  ('elseifs_instr -> elseif_instr','elseifs_instr',1,'p_elseifs_elseif','Analizador_Sintactico.py',266),
  ('elseif_instr -> RELSEIF PARI expresion PARD LLAVEIZQ instrucciones LLAVEDER','elseif_instr',7,'p_elseif','Analizador_Sintactico.py',273),
  ('tipo -> STRING','tipo',1,'p_tipo_datos','Analizador_Sintactico.py',279),
  ('tipo -> NUMBER','tipo',1,'p_tipo_datos','Analizador_Sintactico.py',280),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo_datos','Analizador_Sintactico.py',281),
  ('expresion -> PARI expresion PARD','expresion',3,'p_expresion_parentesis','Analizador_Sintactico.py',291),
  ('expresion -> CADENA','expresion',1,'p_expresion_string','Analizador_Sintactico.py',295),
  ('expresion -> NUMBER','expresion',1,'p_expresion_integer','Analizador_Sintactico.py',299),
  ('expresion -> MENOS NUMBER','expresion',2,'p_expresion_integer_negative','Analizador_Sintactico.py',303),
  ('expresion -> NULL','expresion',1,'p_expresion_nothing','Analizador_Sintactico.py',307),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','Analizador_Sintactico.py',311),
  ('expresion -> RTRUE','expresion',1,'p_expresion_boolean','Analizador_Sintactico.py',316),
  ('expresion -> RFALSE','expresion',1,'p_expresion_boolean','Analizador_Sintactico.py',317),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',326),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',327),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',328),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',329),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',330),
  ('expresion -> expresion PORCENTAJE expresion','expresion',3,'p_expresion_binaria_aritmetica','Analizador_Sintactico.py',331),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',347),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',348),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',349),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',350),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',351),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria_relacional','Analizador_Sintactico.py',352),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria_logica','Analizador_Sintactico.py',368),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria_logica','Analizador_Sintactico.py',369),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','Analizador_Sintactico.py',377),
  ('expresiones_coma -> expresiones_coma COMA expresion','expresiones_coma',3,'p_expresiones_coma_expresiones_coma_epxresion','Analizador_Sintactico.py',382),
  ('expresiones_coma -> expresion','expresiones_coma',1,'p_expresiones_coma_expresion','Analizador_Sintactico.py',387),
]
